#!/usr/bin/env bash
# Set the feature ID for the current worktree
# Decouples feature tracking from branch naming

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}ℹ${NC} $1"
}

log_success() {
    echo -e "${GREEN}✓${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

# Show current configuration
show_config() {
    echo "=========================================="
    echo "Current Feature Configuration"
    echo "=========================================="
    echo ""

    local current_branch
    current_branch="$(git branch --show-current)"
    echo "Branch: $current_branch"

    # Check feature.config
    if [[ -f "$PROJECT_ROOT/.claude/feature.config" ]]; then
        echo ""
        echo "Feature Config (.claude/feature.config):"
        cat "$PROJECT_ROOT/.claude/feature.config"
    else
        echo "Feature Config: Not set"
    fi

    # Check git config
    local git_spec_id
    git_spec_id=$(git config --local feature.specid 2>/dev/null || echo "")
    if [[ -n "$git_spec_id" ]]; then
        echo ""
        echo "Git Config: $git_spec_id"
    fi

    # Check event store
    if [[ -f "$PROJECT_ROOT/.orchestrator/events.db" ]]; then
        local event_spec_id
        event_spec_id=$(sqlite3 "$PROJECT_ROOT/.orchestrator/events.db" "
            SELECT f.spec_id
            FROM features f
            JOIN agents a ON f.id = a.feature_id
            WHERE a.branch_name = '$current_branch'
            LIMIT 1;
        " 2>/dev/null || echo "")

        if [[ -n "$event_spec_id" ]]; then
            echo "Event Store: $event_spec_id"
        fi
    fi

    echo ""
}

# Set feature ID
set_feature() {
    local spec_id="$1"

    log_info "Setting feature ID: $spec_id"

    # Create .claude directory if needed
    mkdir -p "$PROJECT_ROOT/.claude"

    # Write feature config
    cat > "$PROJECT_ROOT/.claude/feature.config" << EOF
# Feature configuration for this worktree
# Auto-generated by set-feature.sh
SPEC_ID=$spec_id
EOF

    log_success "Wrote .claude/feature.config"

    # Also set git config (redundant but helpful)
    git config --local feature.specid "$spec_id"
    log_success "Set git config feature.specid"

    # Update event store if feature exists
    if [[ -f "$PROJECT_ROOT/.orchestrator/events.db" ]]; then
        local feature_exists
        feature_exists=$(sqlite3 "$PROJECT_ROOT/.orchestrator/events.db" "
            SELECT COUNT(*) FROM features WHERE spec_id='$spec_id';
        " 2>/dev/null || echo "0")

        if [[ "$feature_exists" -gt 0 ]]; then
            # Update agent branch mapping
            local current_branch
            current_branch="$(git branch --show-current)"

            sqlite3 "$PROJECT_ROOT/.orchestrator/events.db" <<EOF
UPDATE agents
SET branch_name = '$current_branch'
WHERE feature_id = (SELECT id FROM features WHERE spec_id='$spec_id')
AND role = 'overseer';
EOF
            log_success "Updated event store mapping"
        else
            log_warning "Feature $spec_id not in event store"
            log_info "Run: ./scripts/orchestrator/event-store.sh add-feature $spec_id '<name>'"
        fi
    fi

    echo ""
    log_success "Feature ID configured: $spec_id"
    echo ""
    echo "Branch '$current_branch' is now working on feature '$spec_id'"
    echo ""
}

# Main
main() {
    cd "$PROJECT_ROOT"

    if [[ $# -eq 0 ]]; then
        show_config
        echo ""
        echo "Usage:"
        echo "  $0 <spec-id>          Set feature ID for this worktree"
        echo "  $0 --clear            Clear feature configuration"
        echo ""
        echo "Example:"
        echo "  $0 003-reading-goals"
        exit 0
    fi

    if [[ "$1" == "--clear" ]]; then
        rm -f "$PROJECT_ROOT/.claude/feature.config"
        git config --local --unset feature.specid 2>/dev/null || true
        log_success "Feature configuration cleared"
        exit 0
    fi

    set_feature "$1"
}

main "$@"
